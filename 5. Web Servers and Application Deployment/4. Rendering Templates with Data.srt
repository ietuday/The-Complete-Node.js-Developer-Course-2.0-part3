1
00:00:00,750 --> 00:00:06,750
In the last couple of videos we looked at multiple ways that we can render HTL using Express we pass

2
00:00:06,750 --> 00:00:11,370
them H.T. now into response not send but obviously that was not ideal.

3
00:00:11,370 --> 00:00:14,220
It's a real pain to write your markup in a string.

4
00:00:14,220 --> 00:00:20,010
We also created a public directory where we can have our static HVM all files like our help file and

5
00:00:20,010 --> 00:00:22,040
we can serve these up to the browser.

6
00:00:22,080 --> 00:00:23,150
Both of those work great.

7
00:00:23,160 --> 00:00:26,690
But there is a third solution and that's going to be the topic in this video.

8
00:00:26,760 --> 00:00:33,660
That is a templating engine a template the engine is going to let you render DML but do it in a dynamic

9
00:00:33,660 --> 00:00:39,680
way where you can inject values like a user name or the current date inside of the template.

10
00:00:39,690 --> 00:00:45,000
Kind of like you would in Ruby or HP using this templating engine you're also going to be able to create

11
00:00:45,030 --> 00:00:49,980
reusable markup for things like a header or a footer which is going to be the same on a lot of your

12
00:00:49,980 --> 00:00:50,790
pages.

13
00:00:50,890 --> 00:00:55,740
And this town pulling engine handlebars is going to be the topic of this video and the next.

14
00:00:55,740 --> 00:00:57,750
So let's go ahead and get started.

15
00:00:57,780 --> 00:01:00,840
The first thing we're going to do is install this module.

16
00:01:00,840 --> 00:01:04,620
This is a handlebars iView engine for Express.

17
00:01:04,620 --> 00:01:08,300
Now there are a ton of other view engines for Express for example.

18
00:01:08,310 --> 00:01:08,710
E.J..

19
00:01:08,740 --> 00:01:10,170
Yes or pug.

20
00:01:10,170 --> 00:01:13,520
I'm going with handlebars because I like its syntax the best.

21
00:01:13,530 --> 00:01:15,850
It's a great way to get started.

22
00:01:15,930 --> 00:01:18,210
Now I want to show you a few things inside of the browser.

23
00:01:18,210 --> 00:01:25,010
First up we are going to go to handlebars J s dot com.

24
00:01:25,140 --> 00:01:27,620
This is the documentation for handlebars.

25
00:01:27,620 --> 00:01:31,020
It shows you exactly how to use all of its features.

26
00:01:31,040 --> 00:01:35,840
So if you want to use anything we don't cover inside of course you can always go here to learn how to

27
00:01:35,840 --> 00:01:36,910
use it.

28
00:01:36,910 --> 00:01:42,070
Now the thing we're going to be installing is actually a module that's a wrapper around handlebars.

29
00:01:42,080 --> 00:01:46,500
It's going to let us use it as an express iView engine to view this.

30
00:01:46,520 --> 00:01:53,840
We're going to go to and P.M. J.S. dot com forward slash package forward slash and the package name

31
00:01:53,840 --> 00:01:57,840
is H B S and this is the U R L structure for all packages.

32
00:01:57,860 --> 00:02:02,900
So if you ever want to find a packages page you simply type and Pam Jasc dot com forward slash package

33
00:02:02,960 --> 00:02:05,460
forward slash the package name.

34
00:02:05,560 --> 00:02:07,070
This module is pretty popular.

35
00:02:07,130 --> 00:02:09,820
It's a really great view engine they have a lot of documentation.

36
00:02:09,830 --> 00:02:12,520
I just want to let you know this exists as well.

37
00:02:12,530 --> 00:02:17,690
Now we can go ahead and install it and integrate it into our application over in the terminal.

38
00:02:17,690 --> 00:02:19,170
I'm going to install.

39
00:02:19,250 --> 00:02:27,940
Using NPM install the module name is abs and the most recent version is at four point zero point zero.

40
00:02:28,060 --> 00:02:31,120
And I will be using the saved flag to update package.

41
00:02:31,150 --> 00:02:37,750
Jason No actually configuring express to use this handlebars view engine is super simple.

42
00:02:37,760 --> 00:02:43,750
All we have to do is import and add one statement to our express configuration over inside of atom we're

43
00:02:43,750 --> 00:02:46,600
going to do just that inside of atom.

44
00:02:46,600 --> 00:02:50,750
Let's get started by loading in handlebars Konst.

45
00:02:50,880 --> 00:02:51,860
Yes.

46
00:02:51,870 --> 00:02:55,310
Equals require a B S.

47
00:02:55,390 --> 00:03:02,530
And from here we can go ahead and add that one line right above where I call app use for Express static.

48
00:03:02,530 --> 00:03:09,040
I'm going to call app dot set and this lets us set some various express related configurations.

49
00:03:09,070 --> 00:03:12,060
There's a lot of built in ones we'll be talking about more of them later.

50
00:03:12,070 --> 00:03:16,450
For now though what we're going to do is pass in a key value pair where the key is the thing you want

51
00:03:16,450 --> 00:03:20,400
to set and the value is the value you want to use here.

52
00:03:20,470 --> 00:03:22,190
The key we're setting is.

53
00:03:22,190 --> 00:03:24,040
View engine.

54
00:03:24,040 --> 00:03:28,930
This is going to tell express what view engine we'd like to use and we're going to pass in inside of

55
00:03:28,930 --> 00:03:29,590
quotes.

56
00:03:29,670 --> 00:03:36,430
Could be as perfect and that is all we need to do to get started now in order to create our very first

57
00:03:36,430 --> 00:03:37,130
template.

58
00:03:37,180 --> 00:03:40,810
What I'd like to do is make a directory in the project called views.

59
00:03:40,930 --> 00:03:45,320
Views is the default directory that express uses for your templates.

60
00:03:45,340 --> 00:03:48,960
So what we're going to do is add this and then we'll add a template inside of it.

61
00:03:49,120 --> 00:03:54,250
We've got a directory called views and inside of us we're going to go ahead and make a template for

62
00:03:54,250 --> 00:04:01,690
our About page right here a new file and the file name is going to be whatever you'd like in this case

63
00:04:01,690 --> 00:04:03,400
about Dot.

64
00:04:03,590 --> 00:04:06,310
As this handlebars extension is important.

65
00:04:06,310 --> 00:04:07,650
Make sure to include it.

66
00:04:07,900 --> 00:04:13,870
And Adam already knows how to parse B-S files down below where it shows the current language it's using

67
00:04:13,870 --> 00:04:20,240
it says it's using H.T. M-L in parentheses mustache mustache is used as the name for this type of handle

68
00:04:20,260 --> 00:04:25,850
bars syntax because when you type these curly braces I guess they kind of look like mustaches.

69
00:04:25,870 --> 00:04:31,380
What we're going to do to get started though is take the contents of help h t M-L and copy it directly

70
00:04:32,440 --> 00:04:37,120
I'm going to copy this file so we don't have to rewrite that boilerplate and we'll paste it right in

71
00:04:37,120 --> 00:04:37,950
here.

72
00:04:37,960 --> 00:04:40,920
Now we can go ahead and try to render this page.

73
00:04:40,960 --> 00:04:45,250
I am going to change the H one from help page to about page.

74
00:04:45,340 --> 00:04:49,120
We'll talk about how to dynamically render stuff inside here in just a second.

75
00:04:49,120 --> 00:04:53,440
What I'd like to do at first is just get this rendering over inside of a server.

76
00:04:53,490 --> 00:05:00,040
Yes we already have a route for forward slash about which means we can go ahead and render our template

77
00:05:00,190 --> 00:05:03,170
instead of sending back this about page string.

78
00:05:03,490 --> 00:05:10,210
I'm going to go ahead and remove our call to yes send and we're going to replace it with our Yes Dot

79
00:05:10,450 --> 00:05:15,790
render render is going to let you render any of the templates you have set up with your current view

80
00:05:15,790 --> 00:05:16,980
engine right here.

81
00:05:16,990 --> 00:05:21,310
I do indeed have my about template and I can pass that name about.

82
00:05:21,330 --> 00:05:22,120
HB Yes.

83
00:05:22,240 --> 00:05:29,880
In as the first and only argument we're going to render about Dot h that's perfect.

84
00:05:29,920 --> 00:05:31,110
Now we are done.

85
00:05:31,180 --> 00:05:34,750
This is going to be enough to get that static page rendering.

86
00:05:34,900 --> 00:05:36,660
I'm going to go ahead and save server Dot.

87
00:05:36,740 --> 00:05:37,110
Yes.

88
00:05:37,120 --> 00:05:39,850
And over in the terminal are clear the output.

89
00:05:39,850 --> 00:05:44,140
And I'm going to run our server using gnomon Nordman server.

90
00:05:44,290 --> 00:05:47,080
J.S. once the server is up and running.

91
00:05:47,140 --> 00:05:48,760
Here it is on port three thousand.

92
00:05:48,760 --> 00:05:54,190
We can go ahead and open up this forward slash about u r l and see what we get.

93
00:05:54,190 --> 00:06:02,530
I'm going to head into Krome close some tabs and open up a local host Colan 3000 a forward slash about.

94
00:06:02,950 --> 00:06:08,480
And when I do that what do I get I get my about page rendered just like you'd expected.

95
00:06:08,530 --> 00:06:13,910
We had an H1 tag which shows up nice and big and we have our paragraph tag which shows up below.

96
00:06:14,200 --> 00:06:15,390
So far we have used.

97
00:06:15,470 --> 00:06:18,790
Yes but we haven't actually used any of its features.

98
00:06:18,790 --> 00:06:20,760
Right now we're rendering a dynamic page.

99
00:06:20,770 --> 00:06:23,130
So we might as well have not even included it.

100
00:06:23,230 --> 00:06:27,580
What I want to do is talk about how we can inject data inside of our templates.

101
00:06:27,580 --> 00:06:32,270
Let's come up with some things that we want to make dynamic inside of our handlebars file.

102
00:06:32,530 --> 00:06:37,900
First up we're going to go ahead and make this H-1 tagged dynamic so the page name gets passed into

103
00:06:37,900 --> 00:06:38,710
the template.

104
00:06:38,710 --> 00:06:40,260
And we're also going to add a footer.

105
00:06:40,390 --> 00:06:43,270
For now we'll just make that a simple footer tag

106
00:06:46,890 --> 00:06:48,280
inside of the footer.

107
00:06:48,360 --> 00:06:53,650
We're going to go ahead and out a paragraph and that paragraph is going to have the copyright for our

108
00:06:53,650 --> 00:06:54,480
Web site.

109
00:06:54,550 --> 00:07:01,620
We'll just say something like copyright followed by the year which is 2016 now this year should also

110
00:07:01,620 --> 00:07:02,280
be dynamic.

111
00:07:02,280 --> 00:07:05,920
So as the years change we don't have to manually update our markup.

112
00:07:06,030 --> 00:07:11,160
We're going to go ahead and look at how to make both the 2016 and the about page dynamic which means

113
00:07:11,160 --> 00:07:16,260
they're getting passed in instead of being typed right in the handlebars file in order to do this.

114
00:07:16,260 --> 00:07:17,800
We're going to have to do two things.

115
00:07:17,880 --> 00:07:20,640
We're going to have to pass some data into the template.

116
00:07:20,640 --> 00:07:24,990
This is going to be an object a set of key value pairs and we're going to have to learn how to pull

117
00:07:24,990 --> 00:07:30,840
off some of those key value pairs inside of our handlebars while passing in data is pretty simple.

118
00:07:30,960 --> 00:07:35,340
All you have to do is specify a second argument to Ascot render.

119
00:07:35,400 --> 00:07:38,140
This is going to take an object in on this object.

120
00:07:38,160 --> 00:07:45,470
You can specify whatever you like I might have a page title that gets set equal to about page.

121
00:07:45,490 --> 00:07:46,120
There we go.

122
00:07:46,300 --> 00:07:48,810
We have one piece of data getting injected in the template.

123
00:07:48,820 --> 00:07:51,870
It's not used yet but it is indeed getting injected.

124
00:07:52,300 --> 00:07:55,400
We can also add another one like the current year.

125
00:07:55,750 --> 00:08:01,090
I'm going to put the current year right here and I'm going to set current year equal to the actual year

126
00:08:01,090 --> 00:08:04,300
off of the date javascript constructor.

127
00:08:04,300 --> 00:08:06,320
This is going to look something like this.

128
00:08:06,400 --> 00:08:11,530
We're going to create a new date which makes a new instance of the date object then we're going to use

129
00:08:11,530 --> 00:08:14,780
a method called Get full year which returns the year.

130
00:08:14,830 --> 00:08:23,160
In this case it would return 2016 just like this dot get full year.

131
00:08:23,200 --> 00:08:25,720
Now we have a page title and a current year.

132
00:08:25,770 --> 00:08:30,750
These are both getting passed in and we can go ahead and use them in order to use these pieces of data.

133
00:08:30,760 --> 00:08:36,000
What we have to do inside of our template is use that handle bars syntax which looks a little bit like

134
00:08:36,000 --> 00:08:36,880
this.

135
00:08:36,960 --> 00:08:42,540
You start by opening up to curly braces then you close it to curly braces and you can see that Adam

136
00:08:42,540 --> 00:08:47,810
actually picked up on it automatically and I didn't even need to type the closing brace inside of here.

137
00:08:47,820 --> 00:08:51,000
You can reference any of the props you passed in this case.

138
00:08:51,000 --> 00:08:58,770
I'm going to use page title here Page uppercase t title and down below inside of our copyright paragraph

139
00:08:59,010 --> 00:09:07,970
I'm going to go ahead and use inside of double curly braces current year and with this in place we now

140
00:09:07,970 --> 00:09:12,090
have two pieces of dynamic data and getting injected inside of our application.

141
00:09:12,320 --> 00:09:16,860
No gnomon should have restarted in the background so there's no need to manually do anything there.

142
00:09:16,940 --> 00:09:20,540
And when I refresh the page we do still get about page which is great.

143
00:09:20,540 --> 00:09:26,840
This is coming from the data we defined in server g s and we get copyright 2016 showing up.

144
00:09:26,840 --> 00:09:28,350
This is fantastic.

145
00:09:28,460 --> 00:09:31,640
Well this web page is pretty simple and doesn't look that interesting.

146
00:09:31,640 --> 00:09:36,650
At least you know how to create those servers and inject that data inside of your web page.

147
00:09:36,650 --> 00:09:41,550
All you'd have to do from here is add some custom styles to get things looking nice.

148
00:09:43,140 --> 00:09:47,490
Before we go ahead and get into the challenge I'm going to go ahead and move into the about file and

149
00:09:47,490 --> 00:09:48,910
swap out that title.

150
00:09:49,050 --> 00:09:50,340
Currently it says Help page.

151
00:09:50,340 --> 00:09:52,200
That's leftover from the public folder.

152
00:09:52,230 --> 00:09:56,490
I'm going to change it to some web site awesome.

153
00:09:56,730 --> 00:10:00,780
Now that we have this in place I'm going to go ahead and give you your challenge which is going to be

154
00:10:00,780 --> 00:10:05,250
to create a brand new template and that template is going to get rendered when someone visits the root

155
00:10:05,280 --> 00:10:06,170
of our Web site.

156
00:10:06,210 --> 00:10:08,360
The forward slash route.

157
00:10:08,400 --> 00:10:13,150
Now currently we render some Jason data when I want you to do is replace this with a call to response

158
00:10:13,150 --> 00:10:17,600
Scott render rendering a brand new view home dot H B S.

159
00:10:17,640 --> 00:10:23,390
Now this template doesn't exist you can duplicate the about HBL file or renaming it to home.

160
00:10:23,460 --> 00:10:23,750
H.

161
00:10:23,760 --> 00:10:25,030
B S.

162
00:10:25,260 --> 00:10:30,540
Now inside of home H.B. yes you're going to have the same H-1 you're also going to have your footer

163
00:10:30,810 --> 00:10:32,400
and you're going to have a new property.

164
00:10:32,400 --> 00:10:36,010
Welcome message which needs to get rendered inside of a paragraph tag.

165
00:10:36,150 --> 00:10:41,210
Now the about page is not going to support welcome message but the home page is going to need to.

166
00:10:41,220 --> 00:10:45,930
Which means aside from these two props that get passed and to render you're also going to need to pass

167
00:10:45,930 --> 00:10:50,450
in a third one welcome message and you can set it to whatever you like when you're done.

168
00:10:50,490 --> 00:10:52,690
You should be able to visit that page in a browser.

169
00:10:52,710 --> 00:10:55,640
You should see your page title which should be something like home page.

170
00:10:55,710 --> 00:10:56,950
Your welcome message.

171
00:10:56,950 --> 00:10:58,280
So that equal to whenever you like.

172
00:10:58,410 --> 00:11:00,750
And the copyright showing up.

173
00:11:00,750 --> 00:11:05,850
That's all going to be available at just the root of the Web site localhost 3000.

174
00:11:05,850 --> 00:11:07,590
So take a moment to knock all of that out.

175
00:11:07,590 --> 00:11:08,110
Test it.

176
00:11:08,130 --> 00:11:12,300
And when you're done and you do see things rendering when you visit the root of the Web site you can

177
00:11:12,300 --> 00:11:18,070
go ahead and click play.

178
00:11:18,130 --> 00:11:18,990
How'd you do.

179
00:11:19,000 --> 00:11:23,240
Hopefully it didn't have too much trouble creating that template and getting it to render.

180
00:11:23,240 --> 00:11:24,090
To get started.

181
00:11:24,100 --> 00:11:29,770
I'm going to duplicate the about JS file so we can start customizing it for our needs.

182
00:11:30,690 --> 00:11:33,690
Duplicate and I'll call this one home.

183
00:11:33,720 --> 00:11:35,050
HB Yes.

184
00:11:35,070 --> 00:11:37,320
Now from here most things are going to stay the same.

185
00:11:37,320 --> 00:11:39,320
We're going to keep the page title in place.

186
00:11:39,330 --> 00:11:42,620
We're also going to keep the copyright and footer down below.

187
00:11:42,690 --> 00:11:44,870
But I do want to change though is this paragraph.

188
00:11:44,940 --> 00:11:49,380
It was fine that the about page had a static one but for the home page we're going to set it equal to

189
00:11:50,040 --> 00:11:51,440
inside of curly braces.

190
00:11:51,540 --> 00:11:57,440
The welcome message property now welcome message is only going to be available on home.

191
00:11:57,450 --> 00:12:00,960
HB Yes which is why I'm specifying it here but not here.

192
00:12:01,380 --> 00:12:03,070
Next up you needed to call.

193
00:12:03,090 --> 00:12:06,300
Response not render inside of the callback.

194
00:12:06,330 --> 00:12:13,830
This is going to let us actually render that page response dot render passing in the template name we

195
00:12:13,830 --> 00:12:16,070
want to render this one is called home.

196
00:12:16,230 --> 00:12:16,900
Yes.

197
00:12:17,040 --> 00:12:20,430
Then we're going to pass in our data now to get started.

198
00:12:20,430 --> 00:12:23,660
We can go ahead and pass the page title.

199
00:12:23,880 --> 00:12:31,660
I'm going to set this equal to home page and we'll pass in some sort of generic welcome message Welcome

200
00:12:31,990 --> 00:12:33,350
to my Web site.

201
00:12:33,460 --> 00:12:36,070
Really great user experience there.

202
00:12:36,190 --> 00:12:41,540
And then we're going to pass in the current year and we already know how to fetch the current year new

203
00:12:41,540 --> 00:12:51,060
date and on the Date object we're going to call that get full year method and get full year perfect

204
00:12:51,780 --> 00:12:52,950
with this in place.

205
00:12:52,950 --> 00:12:57,600
All you needed to do was save the file which is automatically going to restart the server using gnomon

206
00:12:57,600 --> 00:12:59,280
and refresh the browser.

207
00:12:59,280 --> 00:13:00,570
When I do that what do I get.

208
00:13:00,570 --> 00:13:06,570
I get my home page title my welcome to my Web site message and my copyright with the year 2016 right

209
00:13:06,570 --> 00:13:07,190
here.

210
00:13:07,350 --> 00:13:11,560
And if I go to forward slash about everything still looks great.

211
00:13:11,560 --> 00:13:17,380
We have our dynamic page title and copyright and we have our static some text here text with this in

212
00:13:17,380 --> 00:13:20,580
place we are now done with the very basics of handlebars.

213
00:13:20,590 --> 00:13:24,390
Hopefully you see how this can be useful inside of a real world web app.

214
00:13:24,550 --> 00:13:30,070
Aside from a realistic example like the copyright other reasons you might use this is to inject some

215
00:13:30,070 --> 00:13:35,890
sort of dynamic user data things like a username and email or anything else now that you have a basic

216
00:13:35,890 --> 00:13:40,040
understanding about how to use handlebars to create static pages.

217
00:13:40,090 --> 00:13:43,220
We're going to go ahead and look at some more advanced features of abs.

218
00:13:43,270 --> 00:13:48,230
Inside of the next video I'm super excited to get to it because it's going to be really fantastic stuff.

219
00:13:48,250 --> 00:13:49,270
So stay tuned.

220
00:13:49,270 --> 00:13:50,330
I'll see you soon

